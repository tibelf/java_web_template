<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${sql.driver}"/>
        <property name="url" value="${sql.url}"/>
        <property name="username" value="${sql.username}"/>
        <property name="password" value="${sql.password}"/>

        <!-- 初始化连接 -->
        <property name="initialSize" value="5"></property>
        <!-- 最大活动连接 -->
        <property name="maxActive" value="100"></property>
        <!-- 最大空闲连接 -->
        <property name="maxIdle" value="10"></property>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="5"></property>
        <!-- 最大等待时间 单位：毫秒 -->
        <property name="maxWait" value="5000"></property>
        <!-- SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前 -->
        <property name="validationQuery" value="select 1"></property>
        <!-- 指定是否在在连接池中取出连接前进行检验,如果失败，则从连接池中移除连接尝试取出另一个 -->
        <property name="testOnBorrow" value="true"></property>
        <!-- 指定是否在归还连接前进行检验 -->
        <property name="testOnReturn" value="false"></property>
        <!--指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除 -->
        <property name="testWhileIdle" value="true"></property>
        <!--在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程 -->
        <property name="timeBetweenEvictionRunsMillis" value="290000"></property>
        <!-- 连接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值，单位毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="290000"></property>
        <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
        <property name="numTestsPerEvictionRun" value="3"></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--<property name="annotationClass" value="org.springframework.stereotype.Repository"/>-->
        <property name="basePackage" value="com.jd.jdda_collector.mybatis.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>